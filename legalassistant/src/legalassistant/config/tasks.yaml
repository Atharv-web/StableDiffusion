doc_analyzing_task:
  description: >
    Parse the uploaded .docx legal documents, identify the corresponding ADGM legal process 
    using classification logic, and extract all relevant information provided by the user. 
    This includes entity names, addresses, dates, shareholding details, and any other 
    application-specific content. Also retrieve the applicable checklist section from the 
    knowledge source, including any associated template or reference files for later verification.
  expected_output: >
    A structured JSON object containing:
      - process_type: matched key from knowledge/checklist.json
      - extracted_info: dictionary of user-provided information
      - documents_text: raw parsed text from each uploaded document
      - checklist_section: full checklist entry
  agent: docAnalyst

verifying_task:
  description: >
    Verify the extracted user-provided information and uploaded documents against the 
    official ADGM checklist section retrieved by the docAnalyst agent. Identify all missing 
    mandatory documents. Compare user documents against their corresponding templates 
    to find any deviations, missing clauses, or altered wording. 
    Detect legal red flags and inconsistencies using regex patterns and LLM-assisted checks.
  expected_output: >
    A structured JSON object containing:
      - missing_documents: list of required checklist items not found in the uploaded docs
      - issues_found: list of flagged issues with:
          - type: issue category (e.g., "template_mismatch", "red_flag_pattern")
          - snippet: excerpt from document where the issue occurs
      - verification_summary: short text summary of findings
  agent: verifyingAnalyst
  context: [doc_analyzing_task]

writing_task:
  description: >
    Insert contextual comments directly into the provided .docx files using the "Docx Annotator" tool. 
    - Use the tool with arguments: 
      - documents: the list of uploaded .docx paths provided as input ("documents").
      - issues: the list of issues produced by the verifying task ("issues_found").
    Each annotation should explain why the section is flagged and reference the official ADGM template
    or checklist requirement when applicable. Produce one annotated .docx file per input file, preserving
    original formatting.
  expected_output: >
    - Annotated .docx files for each uploaded document, saved in the session output folder
    - Each annotation appears either as a visible inline comment paragraph
    - References to missing documents or template mismatches included in the comment text
  agent: docWriter
  context: [verifying_task, doc_analyzing_task]